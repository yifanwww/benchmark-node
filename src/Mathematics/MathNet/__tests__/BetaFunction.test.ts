/**
 * ref:
 * - https://github.com/mathnet/mathnet-numerics/blob/v5.0.0-alpha09/src/Numerics.Tests/SpecialFunctionsTests/SpecialFunctionsTests.cs
 */

/* eslint-disable @typescript-eslint/no-loss-of-precision */

import { AssertHelpers } from '../../../TestTools/AssertHelpers.test';
import { BetaFunction } from '../BetaFunction';

describe(`Test class static method ${BetaFunction.name}.${BetaFunction.betaRegularized.name}`, () => {
    /**
     * ref: https://github.com/mathnet/mathnet-numerics/blob/v5.0.0-alpha09/src/Numerics.Tests/SpecialFunctionsTests/SpecialFunctionsTests.cs#L264
     */
    it('tests with several reference data', () => {
        const dataset: [number, number, number, number][] = [
            [0.1, 0.1, 0.1, 0.40638509393627598963947434031370208398700911383034],
            [0.1, 0.1, 0.5, 0.5],
            [0.1, 0.1, 0.8, 0.56029080977665439586092261707431380702999082404228],
            [0.1, 1.5, 0.1, 0.83793618164513694339361766577607270440777026543289],
            [0.1, 1.5, 0.5, 0.96453423693668031005965611526662377555163072304903],
            [0.1, 1.5, 0.8, 0.99288897919542998751072045939791723468184549496473],
            [0.1, 2.5, 0.1, 0.88585310309894667823419197676046986281131524104959],
            [0.1, 2.5, 0.5, 0.98784074184406228317625751436240720987391458581291],
            [0.1, 2.5, 0.8, 0.99906884630106408932550166100889714490764416359312],
            [0.1, 5.5, 0.1, 0.94519184147610137383076366494492317664691771837548],
            [0.1, 5.5, 0.5, 0.99917702583101287494949180374093750006040749104055],
            [0.1, 5.5, 0.8, 0.99999619645266501604882303584892931538704382134298],
            [1.5, 0.1, 0.1, 0.0023637194748231330327322712604688049136736986021871],
            [1.5, 0.1, 0.5, 0.03546576306331968994034388473337622444836927695097],
            [1.5, 0.1, 0.8, 0.10619861080705813882414161079467267590245761692272],
            [1.5, 1.5, 0.1, 0.052044019330913933551809009997594089261007490064035],
            [1.5, 1.5, 0.5, 0.5],
            [1.5, 1.5, 0.8, 0.85762151006735301922188173009147886735366387396138],
            [1.5, 2.5, 0.1, 0.097880642941379793645839194076629344959184516635409],
            [1.5, 2.5, 0.5, 0.71220659078919378102517835116335248271261286098728],
            [1.5, 2.5, 0.8, 0.96627128455142020796603976406510565066301101575357],
            [1.5, 5.5, 0.1, 0.2492200779249636429835386068413815093625886315581],
            [1.5, 5.5, 0.5, 0.95270739368361339952038048248181862978690743677285],
            [1.5, 5.5, 0.8, 0.99963193911681378117173263163355516583213310848701],
            [2.5, 0.1, 0.1, 0.00015291978644767572330394885397661411972523657814463],
            [2.5, 0.1, 0.5, 0.012159258155937716823742485637592790126085414187091],
            [2.5, 0.1, 0.8, 0.063159516487818477363383984899205310365144861115492],
            [2.5, 1.5, 0.1, 0.006207395720448073457778825918558833562830463492662],
            [2.5, 1.5, 0.5, 0.28779340921080621897482164883664751728738713901272],
            [2.5, 1.5, 0.8, 0.74897173558328583047772369611785208404431673216919],
            [2.5, 2.5, 0.1, 0.015374720442541245985473611768528587536206924004576],
            [2.5, 2.5, 0.5, 0.5],
            [2.5, 2.5, 0.8, 0.92281137475779334211841505067903343661808086762039],
            [2.5, 5.5, 0.1, 0.065915491253258347344782598110283193803051483319306],
            [2.5, 5.5, 0.5, 0.87186678766868243532031253918149387446781682306342],
            [2.5, 5.5, 0.8, 0.99857234512565487924356478796968439529913692090276],
            [5.5, 0.1, 0.1, 0.000000076971146008440526509370378069895435149621047562911],
            [5.5, 0.1, 0.5, 0.00082297416898712505050819625906249993959250895944939],
            [5.5, 0.1, 0.8, 0.01964656911825443767408345737200950450690987324177],
            [5.5, 1.5, 0.1, 0.0000085380512231662773545327104780279605728164994539023],
            [5.5, 1.5, 0.5, 0.047292606316386600479619517518181370213092563227146],
            [5.5, 1.5, 0.8, 0.46453697358156781101222907948783656601193056166297],
            [5.5, 2.5, 0.1, 0.000036476564661926426853537763285519105619982887967225],
            [5.5, 2.5, 0.5, 0.12813321233131756467968746081850612553218317693658],
            [5.5, 2.5, 0.8, 0.73579303531824700577792236664278017906658620718916],
            [5.5, 5.5, 0.1, 0.00051241472879389331855418481833750204851457778933154],
            [5.5, 5.5, 0.5, 0.5],
            [5.5, 5.5, 0.8, 0.98491460241721309518021565227501009891015897915977],
        ];

        for (const data of dataset) {
            const expected = data[3];
            AssertHelpers.almostEqualRelative(expected, BetaFunction.betaRegularized(data[0], data[1], data[2]), 11);
        }
    });

    /**
     * ref: https://github.com/mathnet/mathnet-numerics/blob/v5.0.0-alpha09/src/Numerics.Tests/SpecialFunctionsTests/SpecialFunctionsTests.cs#L270
     */
    it('tests with large arguments', () => {
        AssertHelpers.almostEqualRelative(
            0.61624368331298802128,
            BetaFunction.betaRegularized(3846.2382301675848, 738420369.64263761, 0.0000052331266889206809),
            4,
        );
    });

    it('throws errors', () => {
        expect(() => BetaFunction.betaRegularized(-1, 0, 0)).toThrowError();
        expect(() => BetaFunction.betaRegularized(0, -1, 0)).toThrowError();
        expect(() => BetaFunction.betaRegularized(0, 0, -1)).toThrowError();
        expect(() => BetaFunction.betaRegularized(0, 0, 2)).toThrowError();
    });
});
